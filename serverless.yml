service: telegram

provider:
  name: aws
  stage: prod
  region: eu-central-1
  memorySize: 512
  timeout: 30
  runtime: nodejs12.x
  tracing:
    apiGateway: true
    lambda: true
  environment:
    GOOGLE_CX_TOKEN: ${env:GOOGLE_CX_TOKEN, file(./config.json):GOOGLE_CX_TOKEN}
    GOOGLE_SEARCH_TOKEN: ${env:GOOGLE_SEARCH_TOKEN, file(./config.json):GOOGLE_SEARCH_TOKEN}
    OPENWEATHERMAP_TOKEN: ${env:OPENWEATHERMAP_TOKEN, file(./config.json):OPENWEATHERMAP_TOKEN}
    TOKEN: ${env:TOKEN, file(./config.json):TOKEN}
    FCC_API_KEY: ${env:FCC_API_KEY, file(./config.json):FCC_API_KEY}
    TRANSLATION_APP_TOKEN: ${env:TRANSLATION_APP_TOKEN, file(./config.json):TRANSLATION_APP_TOKEN}
    YOUTUBE_TOKEN: ${env:YOUTUBE_TOKEN, file(./config.json):YOUTUBE_TOKEN}
    FIXER_API_KEY: ${env:FIXER_API_KEY, file(./config.json):FIXER_API_KEY}
    IS_LOCAL: ${env:IS_LOCAL}
    RECAP_DEV_SYNC_ENDPOINT: ${env:RECAP_DEV_SYNC_ENDPOINT, file(./config.json):RECAP_DEV_SYNC_ENDPOINT}
    region: eu-central-1
  iamRoleStatements:
    ${file(roleStatements.yml)}

functions:
  telegram-bot:
    handler: src/index.handler
    events:
      - http:
          path: /
          method: post
      - http:
          path: /
          method: get
      - schedule:
          rate: cron(0 7,9,11,13,15,17 ? * MON-FRI *)
          enabled: true
          input:
            message:
              text: /c
              chat:
                id: -1001111472139.0

plugins:
  - "@recap.dev/serverless-plugin"
  - serverless-webpack
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000
  custom:
    webpack:
      packager: 'yarn'

resources:
  ${file(resources.yml)}

