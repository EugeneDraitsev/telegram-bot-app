service: telegram
useDotenv: true

provider:
  name: aws
  stage: prod
  region: eu-central-1
  memorySize: 512
  timeout: 30
  runtime: nodejs22.x
  architecture: arm64
  environment:
    region: eu-central-1
    stage: ${sls:stage}
  iam:
    role:
      statements:
        ${file(roleStatements.yml)}

functions:
  telegram-bot:
    timeout: 300
    handler: src/telegram-bot/index.default
    environment:
      GOOGLE_CX_TOKEN: ${env:GOOGLE_CX_TOKEN}
      GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}
      OPEN_WEATHER_MAP_TOKEN: ${env:OPEN_WEATHER_MAP_TOKEN}
      TOKEN: ${env:TOKEN}
      YOUTUBE_TOKEN: ${env:YOUTUBE_TOKEN}
      FIXER_API_KEY: ${env:FIXER_API_KEY}
      EXCHANGE_RATE_API_KEY: ${env:EXCHANGE_RATE_API_KEY}
      OPENAI_API_KEY: ${env:OPENAI_API_KEY}
      OPENAI_CHAT_IDS: ${env:OPENAI_CHAT_IDS}
      GEMINI_API_KEY: ${env:GEMINI_API_KEY}
      UPSTASH_REDIS_URL: ${env:UPSTASH_REDIS_URL}
      UPSTASH_REDIS_TOKEN: ${env:UPSTASH_REDIS_TOKEN}
    events:
      - http:
          path: /
          method: post

  currency-scheduler:
    handler: src/telegram-bot/currency-scheduler.default
    environment:
      TOKEN: ${env:TOKEN}
      FIXER_API_KEY: ${env:FIXER_API_KEY}
      EXCHANGE_RATE_API_KEY: ${env:EXCHANGE_RATE_API_KEY}
    events:
      - schedule:
          name: currency-scheduler-event
          enabled: ${env:ENABLE_SCHEDULING, true}
          rate: cron(0 9,11,13,15,17 ? * MON-FRI *)

  redis-scheduler:
    handler: src/telegram-bot/redis-scheduler.default
    environment:
      UPSTASH_REDIS_URL: ${env:UPSTASH_REDIS_URL}
      UPSTASH_REDIS_TOKEN: ${env:UPSTASH_REDIS_TOKEN}
    events:
      - schedule:
          name: redis-scheduler-event
          enabled: ${env:ENABLE_SCHEDULING, true}
          rate: rate(1 hour)

  sharp-statistics:
    handler: src/sharp-statistics/index.default
    environment:
      FONTCONFIG_PATH: './fonts'
    memorySize: 1536
    events:
      - http:
          path: /statistics/{chatId}
          method: get

plugins:
  - serverless-offline
  - serverless-esbuild

package:
  individually: true
  patterns:
    - fonts/**

build:
  esbuild: false

custom:
  serverless-offline:
    httpPort: 4000
  esbuild:
    target: node22
    external:
      - sharp
    exclude:
      - '@aws-sdk/client-dynamodb'
      - '@aws-sdk/client-lambda'
      - '@aws-sdk/client-s3'
      - '@aws-sdk/lib-dynamodb'
    packagerOptions:
      scripts:
        - npm install --force --os=linux --cpu=arm64 -include=optional sharp

resources:
  ${file(resources.yml)}

