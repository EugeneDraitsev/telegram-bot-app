import { get } from 'lodash'
import fetch from 'node-fetch'

const weatherToken = process.env.OPENWEATHERMAP_TOKEN || 'set_your_token'

const iconGet = [
  '01d',
  '01n',
  '02d',
  '02n',
  '03d',
  '03n',
  '04d',
  '04n',
  '09d',
  '09n',
  '10d',
  '10n',
  '11d',
  '11n',
  '13d',
  '13n',
  '50d',
  '50n',
]
const iconTake = [
  '‚òÄÔ∏è',
  'üåô',
  '‚õÖÔ∏è',
  '‚õÖÔ∏è',
  '‚òÅÔ∏è',
  '‚òÅÔ∏è',
  'üå©',
  'üå©',
  'üåß',
  'üåß',
  'üå¶',
  'üå¶',
  '‚õà',
  '‚õà',
  'üå®',
  'üå®',
  'üå´',
  'üå´',
]
const windDir = ['C', '–°–í', '–í', '–Æ–í', '–Æ', '–Æ–ó', '–ó', '–°–ó', 'C']
const flags = [
  'üá¶üá´',
  'üá¶üáΩ',
  'üá¶üá±',
  'üá©üáø',
  'üá¶üá∏',
  'üá¶üá©',
  'üá¶üá¥',
  'üá¶üáÆ',
  'üá¶üá∂',
  'üá¶üá¨',
  'üá¶üá∑',
  'üá¶üá≤',
  'üá¶üáº',
  'üá¶üá∫',
  'üá¶üáπ',
  'üá¶üáø',
  'üáßüá∏',
  'üáßüá≠',
  'üáßüá©',
  'üáßüáß',
  'üáßüáæ',
  'üáßüá™',
  'üáßüáø',
  'üáßüáØ',
  'üáßüá≤',
  'üáßüáπ',
  'üáßüá¥',
  'üáßüá¶',
  'üáßüáº',
  'üáßüá∑',
  'üáÆüá¥',
  'üáªüá¨',
  'üáßüá≥',
  'üáßüá¨',
  'üáßüá´',
  'üáßüáÆ',
  'üá∞üá≠',
  'üá®üá≤',
  'üá®üá¶',
  'üáÆüá®',
  'üá®üáª',
  'üáßüá∂',
  'üá∞üáæ',
  'üá®üá´',
  'üáπüá©',
  'üá®üá±',
  'üá®üá≥',
  'üá®üáΩ',
  'üá®üá®',
  'üá®üá¥',
  'üá∞üá≤',
  'üá®üá¨',
  'üá®üá©',
  'üá®üá∞',
  'üá®üá∑',
  'üá®üáÆ',
  'üá≠üá∑',
  'üá®üá∫',
  'üá®üáº',
  'üá®üáæ',
  'üá®üáø',
  'üá©üá∞',
  'üá©üáØ',
  'üá©üá≤',
  'üá©üá¥',
  'üá™üá®',
  'üá™üá¨',
  'üá∏üáª',
  'üá¨üá∂',
  'üá™üá∑',
  'üá™üá™',
  'üá™üáπ',
  'üá™üá∫',
  'üá´üá∞',
  'üá´üá¥',
  'üá´üáØ',
  'üá´üáÆ',
  'üá´üá∑',
  'üá¨üá´',
  'üáµüá´',
  'üáπüá´',
  'üá¨üá¶',
  'üá¨üá≤',
  'üá¨üá™',
  'üá©üá™',
  'üá¨üá≠',
  'üá¨üáÆ',
  'üá¨üá∑',
  'üá¨üá±',
  'üá¨üá©',
  'üá¨üáµ',
  'üá¨üá∫',
  'üá¨üáπ',
  'üá¨üá¨',
  'üá¨üá≥',
  'üá¨üáº',
  'üá¨üáæ',
  'üá≠üáπ',
  'üá≠üá≥',
  'üá≠üá∞',
  'üá≠üá∫',
  'üáÆüá∏',
  'üáÆüá≥',
  'üáÆüá©',
  'üáÆüá∑',
  'üáÆüá∂',
  'üáÆüá™',
  'üáÆüá≤',
  'üáÆüá±',
  'üáÆüáπ',
  'üáØüá≤',
  'üáØüáµ',
  'üáØüá™',
  'üáØüá¥',
  'üá∞üáø',
  'üá∞üá™',
  'üá∞üáÆ',
  'üáΩüá∞',
  'üá∞üáº',
  'üá∞üá¨',
  'üá±üá¶',
  'üá±üáª',
  'üá±üáß',
  'üá±üá∏',
  'üá±üá∑',
  'üá±üáæ',
  'üá±üáÆ',
  'üá±üáπ',
  'üá±üá∫',
  'üá≤üá¥',
  'üá≤üá∞',
  'üá≤üá¨',
  'üá≤üáº',
  'üá≤üáæ',
  'üá≤üáª',
  'üá≤üá±',
  'üá≤üáπ',
  'üá≤üá≠',
  'üá≤üá∂',
  'üá≤üá∑',
  'üá≤üá∫',
  'üáæüáπ',
  'üá≤üáΩ',
  'üá´üá≤',
  'üá≤üá©',
  'üá≤üá®',
  'üá≤üá≥',
  'üá≤üá™',
  'üá≤üá∏',
  'üá≤üá¶',
  'üá≤üáø',
  'üá≤üá≤',
  'üá≥üá¶',
  'üá≥üá∑',
  'üá≥üáµ',
  'üá≥üá±',
  'üá≥üá®',
  'üá≥üáø',
  'üá≥üáÆ',
  'üá≥üá™',
  'üá≥üá¨',
  'üá≥üá∫',
  'üá≥üá´',
  'üá∞üáµ',
  'üá≤üáµ',
  'üá≥üá¥',
  'üá¥üá≤',
  'üáµüá∞',
  'üáµüáº',
  'üáµüá∏',
  'üáµüá¶',
  'üáµüá¨',
  'üáµüáæ',
  'üáµüá™',
  'üáµüá≠',
  'üáµüá≥',
  'üáµüá±',
  'üáµüáπ',
  'üáµüá∑',
  'üá∂üá¶',
  'üá∑üá™',
  'üá∑üá¥',
  'üá∑üá∫',
  'üá∑üáº',
  'üáºüá∏',
  'üá∏üá≤',
  'üá∏üá¶',
  'üá∏üá≥',
  'üá∑üá∏',
  'üá∏üá®',
  'üá∏üá±',
  'üá∏üá¨',
  'üá∏üáΩ',
  'üá∏üá∞',
  'üá∏üáÆ',
  'üá¨üá∏',
  'üá∏üáß',
  'üá∏üá¥',
  'üáøüá¶',
  'üá∞üá∑',
  'üá∏üá∏',
  'üá™üá∏',
  'üá±üá∞',
  'üáßüá±',
  'üá∏üá≠',
  'üá∞üá≥',
  'üá±üá®',
  'üáµüá≤',
  'üáªüá®',
  'üá∏üá©',
  'üá∏üá∑',
  'üá∏üáø',
  'üá∏üá™',
  'üá®üá≠',
  'üá∏üáæ',
  'üáπüáº',
  'üáπüáØ',
  'üáπüáø',
  'üáπüá≠',
  'üáπüá±',
  'üáπüá¨',
  'üáπüá∞',
  'üáπüá¥',
  'üáπüáπ',
  'üáπüá≥',
  'üáπüá∑',
  'üáπüá≤',
  'üáπüá®',
  'üáπüáª',
  'üáªüáÆ',
  'üá∫üá¨',
  'üá∫üá¶',
  'üá¶üá™',
  'üá¨üáß',
  'üá∫üá∏',
  'üá∫üáæ',
  'üá∫üáø',
  'üáªüá∫',
  'üáªüá¶',
  'üáªüá™',
  'üáªüá≥',
  'üáºüá´',
  'üá™üá≠',
  'üáæüá™',
  'üáøüá≤',
  'üáøüáº',
]
const regions = [
  'AF',
  'AX',
  'AL',
  'DZ',
  'AS',
  'AD',
  'AO',
  'AI',
  'AQ',
  'AG',
  'AR',
  'AM',
  'AW',
  'AU',
  'AT',
  'AZ',
  'BS',
  'BH',
  'BD',
  'BB',
  'BY',
  'BE',
  'BZ',
  'BJ',
  'BM',
  'BT',
  'BO',
  'BA',
  'BW',
  'BR',
  'IO',
  'VG',
  'BN',
  'BG',
  'BF',
  'BI',
  'KH',
  'CM',
  'CA',
  'IC',
  'CV',
  'BQ',
  'KY',
  'CF',
  'TD',
  'CL',
  'CN',
  'CX',
  'CC',
  'CO',
  'KM',
  'CG',
  'CD',
  'CK',
  'CR',
  'CI',
  'HR',
  'CU',
  'CW',
  'CY',
  'CZ',
  'DK',
  'DJ',
  'DM',
  'DO',
  'EC',
  'EG',
  'SV',
  'GQ',
  'ER',
  'EE',
  'ET',
  'EU',
  'FK',
  'FO',
  'FJ',
  'FI',
  'FR',
  'GF',
  'PF',
  'TF',
  'GA',
  'GM',
  'GE',
  'DE',
  'GH',
  'GI',
  'GR',
  'GL',
  'GD',
  'GP',
  'GU',
  'GT',
  'GG',
  'GN',
  'GW',
  'GY',
  'HT',
  'HN',
  'HK',
  'HU',
  'IS',
  'IN',
  'ID',
  'IR',
  'IQ',
  'IE',
  'IM',
  'IL',
  'IT',
  'JM',
  'JP',
  'JE',
  'JO',
  'KZ',
  'KE',
  'KI',
  'XK',
  'KW',
  'KG',
  'LA',
  'LV',
  'LB',
  'LS',
  'LR',
  'LY',
  'LI',
  'LT',
  'LU',
  'MO',
  'MK',
  'MG',
  'MW',
  'MY',
  'MV',
  'ML',
  'MT',
  'MH',
  'MQ',
  'MR',
  'MU',
  'YT',
  'MX',
  'FM',
  'MD',
  'MC',
  'MN',
  'ME',
  'MS',
  'MA',
  'MZ',
  'MM',
  'NA',
  'NR',
  'NP',
  'NL',
  'NC',
  'NZ',
  'NI',
  'NE',
  'NG',
  'NU',
  'NF',
  'KP',
  'MP',
  'NO',
  'OM',
  'PK',
  'PW',
  'PS',
  'PA',
  'PG',
  'PY',
  'PE',
  'PH',
  'PN',
  'PL',
  'PT',
  'PR',
  'QA',
  'RE',
  'RO',
  'RU',
  'RW',
  'WS',
  'SM',
  'SA',
  'SN',
  'RS',
  'SC',
  'SL',
  'SG',
  'SX',
  'SK',
  'SI',
  'GS',
  'SB',
  'SO',
  'ZA',
  'KR',
  'SS',
  'ES',
  'LK',
  'BL',
  'SH',
  'KN',
  'LC',
  'PM',
  'VC',
  'SD',
  'SR',
  'SZ',
  'SE',
  'CH',
  'SY',
  'TW',
  'TJ',
  'TZ',
  'TH',
  'TL',
  'TG',
  'TK',
  'TO',
  'TT',
  'TN',
  'TR',
  'TM',
  'TC',
  'TV',
  'VI',
  'UG',
  'UA',
  'AE',
  'GB',
  'US',
  'UY',
  'UZ',
  'VU',
  'VA',
  'VE',
  'VN',
  'WF',
  'EH',
  'YE',
  'ZM',
  'ZW',
]

const getWeatherUrlForecast = (locationURL: string): string =>
  `http://api.openweathermap.org/data/2.5/forecast/daily?q=${encodeURI(
    locationURL,
  )}&units=metric&lang=ru&APPID=${weatherToken}`

const getWeatherUrlNow = (locationURL: string): string =>
  `http://api.openweathermap.org/data/2.5/weather?q=${encodeURI(
    locationURL,
  )}&units=metric&lang=ru&APPID=${weatherToken}`

const icon = (value: string): string => get(iconTake, iconGet.indexOf(value.toLowerCase()), 'üôà')

const windDirection = (value: number): string => windDir[Math.round(value / 45)]

const getFlag = (value: string): string => get(flags, regions.indexOf(value.toUpperCase()), 'üôä')

export const getWeather = async (location: string): Promise<string> => {
  try {
    const [infoForecast, infoNow] = await Promise.all([
      fetch(getWeatherUrlForecast(location), { timeout: 5000 }).then((x) => x.json()),
      fetch(getWeatherUrlNow(location), { timeout: 5000 }).then((x) => x.json()),
    ])

    const city = infoForecast.city.name
    const { country } = infoForecast.city
    const { temp } = infoNow.main
    const { humidity } = infoNow.main
    const wind = infoNow.wind.speed
    const dir = windDirection(infoNow.wind.deg)
    const dayTempHigh = infoForecast.list[0].temp.max
    const dayTempLow = infoForecast.list[0].temp.min
    const nextDayTempHigh = infoForecast.list[1].temp.max
    const nextDayTempLow = infoForecast.list[1].temp.min
    const nextNextDayTempHigh = infoForecast.list[2].temp.max
    const nextNextDayTempLow = infoForecast.list[2].temp.min
    const nowDescription = infoNow.weather[0].description
    const dayDescription = infoForecast.list[0].weather[0].description
    const nextDayDescription = infoForecast.list[1].weather[0].description
    const nextNextDayDescription = infoForecast.list[2].weather[0].description
    const nowIcon = icon(infoNow.weather[0].icon)
    const dayIcon = icon(infoForecast.list[0].weather[0].icon)
    const nextDayIcon = icon(infoForecast.list[1].weather[0].icon)
    const nextNextDayIcon = icon(infoForecast.list[2].weather[0].icon)
    const flag = getFlag(country)
    return `–ì–æ—Ä–æ–¥: ${city} —Ä–µ–≥–∏–æ–Ω: ${flag} ${country}\
              \n–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞: ${dir}, —Å–∫–æ—Ä–æ—Å—Ç—å: ${wind}–º/—Å\
              \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: *${temp}¬∞C*, –≤–ª–∞–∂–Ω–æ—Å—Ç—å: ${humidity}%\
              \n${nowDescription} ${nowIcon}\
              \n–°–µ–≥–æ–¥–Ω—è: *${dayTempHigh}¬∞C* / *${dayTempLow}¬∞C*, ${dayDescription} ${dayIcon}\
              \n–ó–∞–≤—Ç—Ä–∞: *${nextDayTempHigh}¬∞C* / *${nextDayTempLow}¬∞C*, ${nextDayDescription} ${nextDayIcon}\
              \n–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞: *${nextNextDayTempHigh}¬∞C* / *${nextNextDayTempLow}¬∞C*, ${nextNextDayDescription} ${nextNextDayIcon}`
  } catch (e) {
    return '–ù–µ–≤–µ—Ä–Ω–æ –≤—ã–±—Ä–∞–Ω –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç'
  }
}
